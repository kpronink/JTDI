# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-12-11 13:16
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CommentsTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, max_length=2000)),
                ('date_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('commentator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InviteUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invited', models.BooleanField(default=False)),
                ('not_invited', models.BooleanField(default=False)),
                ('user_invite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_invite', to=settings.AUTH_USER_MODEL)),
                ('user_sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_sender', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='KanbanStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, null=True)),
                ('color', models.CharField(max_length=10)),
                ('finished', models.BooleanField(default=False)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, max_length=2000)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PartnerGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PerformersAssigned',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selected', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timezone', models.CharField(blank=True, default='Europe/Moscow', max_length=50)),
                ('formatdate', models.CharField(blank=True, choices=[('DD-MM-YYYY', 'DD-MM-YYYY'), ('MM-DD-YYYY', 'MM-DD-YYYY')], default='DD-MM-YYYY', max_length=20)),
                ('firstdayweek', models.CharField(blank=True, choices=[('Понедельник', 'Понедельник'), ('Вторник', 'Вторник'), ('Среда', 'Среда'), ('Четверг', 'Четверг'), ('Пятница', 'Пятница'), ('Суббота', 'Суббота'), ('Воскресенье', 'Воскресенье')], default='Понедельник', max_length=20)),
                ('sex', models.CharField(blank=True, choices=[('MALE', 'Мужской'), ('FEMALE', 'Женский')], default='MALE', max_length=20)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars')),
                ('mail_notify', models.BooleanField(default=True)),
                ('dark_theme', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, null=True)),
                ('color_project', models.CharField(max_length=10)),
                ('group', models.BooleanField(default=False)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='QueuePushNotify',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.CharField(blank=True, default='', max_length=200)),
                ('url', models.CharField(blank=True, default='', max_length=200)),
                ('reminded', models.BooleanField(default=True)),
                ('date_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='QueueTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reminded', models.BooleanField(default=True)),
                ('date_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RegistrationTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('date', models.DateField(blank=True, default=django.utils.timezone.now, null=True)),
                ('date_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('new', models.BooleanField(default=True)),
                ('event', models.CharField(blank=True, default='', max_length=200)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('project', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='JtdiTASKS.Project')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, max_length=2000)),
                ('repeating', models.BooleanField(default=False)),
                ('date', models.DateField(blank=True, default=django.utils.timezone.now, null=True)),
                ('time', models.TimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('date_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('date_finish', models.DateField(blank=True, default=None, null=True)),
                ('date_time_finish', models.DateTimeField(blank=True, default=None, null=True)),
                ('planed_date_finish', models.DateField(blank=True, default=None, null=True)),
                ('active', models.BooleanField(default=False)),
                ('finished', models.BooleanField(default=False)),
                ('group', models.BooleanField(default=False)),
                ('priority', models.CharField(blank=True, choices=[('1', 'Приоритет 1'), ('2', 'Приоритет 2'), ('3', 'Приоритет 3'), ('4', 'Приоритет 4')], default='4', max_length=20)),
                ('color', models.CharField(blank=True, default='grey', max_length=20)),
                ('day_week', models.CharField(blank=True, choices=[('Понедельник', 'Понедельник'), ('Вторник', 'Вторник'), ('Среда', 'Среда'), ('Четверг', 'Четверг'), ('Пятница', 'Пятница'), ('Суббота', 'Суббота'), ('Воскресенье', 'Воскресенье')], default='Понедельник', max_length=20, null=True)),
                ('status', models.CharField(blank=True, choices=[('Wait', 'Ожидание'), ('Started', 'Выполнение'), ('Stoped', 'Приостановлена'), ('Finished', 'Завершена')], default='Wait', max_length=20)),
                ('remind', models.BooleanField(default=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('kanban_status', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='JtdiTASKS.KanbanStatus')),
                ('owner_task', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='JtdiTASKS.Task')),
                ('performer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='performer', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='JtdiTASKS.Project')),
            ],
        ),
        migrations.CreateModel(
            name='TasksTimeTracker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(blank=True, default=None, null=True)),
                ('start', models.DateTimeField(blank=True, default=None, null=True)),
                ('finish', models.DateTimeField(blank=True, default=None, null=True)),
                ('full_time', models.FloatField(blank=True, default=None, null=True)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='JtdiTASKS.Task')),
            ],
        ),
        migrations.CreateModel(
            name='UserProjectFilter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kanban', models.BooleanField(default=False)),
                ('count_visible_tasks', models.CharField(blank=True, default='10', max_length=3)),
                ('project', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='JtdiTASKS.Project')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ViewsEventsTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sees', models.BooleanField(default=True)),
                ('event', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='JtdiTASKS.RegistrationTable')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='queuetask',
            name='task',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='JtdiTASKS.Task'),
        ),
        migrations.AddField(
            model_name='queuetask',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='performersassigned',
            name='filter',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='JtdiTASKS.UserProjectFilter'),
        ),
        migrations.AddField(
            model_name='performersassigned',
            name='performer',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='partnergroup',
            name='project',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='JtdiTASKS.Project'),
        ),
        migrations.AddField(
            model_name='kanbanstatus',
            name='project',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='JtdiTASKS.Project'),
        ),
        migrations.AddField(
            model_name='commentstask',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='JtdiTASKS.Task'),
        ),
    ]
